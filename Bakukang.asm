;  ASM code generated by mikroVirtualMachine for PIC - V. 8.2.0.0
;  Date/Time: 8/22/2011 12:00:22 AM
;  Info: http://www.mikroe.com


; ADDRESS	OPCODE	ASM
; ----------------------------------------------
$0000	$2991			GOTO	_main
$0117	$	_func_moveForwardStraight:
;Bakukang.c,33 :: 		void func_moveForwardStraight() {
;Bakukang.c,35 :: 		if ((PORTD.F0 == 0x00 && PORTD.F1 == 0x00) == 1) {
$0117	$3001			MOVLW	1
$0118	$1303			BCF	STATUS, RP1
$0119	$1283			BCF	STATUS, RP0
$011A	$0508			ANDWF	PORTD, 0
$011B	$00F1			MOVWF	STACK_1
$011C	$0871			MOVF	STACK_1, 0
$011D	$3A00			XORLW	0
$011E	$1D03			BTFSS	STATUS, Z
$011F	$292B			GOTO	L_func_moveForwardStraight_1
$0120	$3000			MOVLW	0
$0121	$1888			BTFSC	PORTD, 1
$0122	$3001			MOVLW	1
$0123	$00F1			MOVWF	STACK_1
$0124	$0871			MOVF	STACK_1, 0
$0125	$3A00			XORLW	0
$0126	$1D03			BTFSS	STATUS, Z
$0127	$292B			GOTO	L_func_moveForwardStraight_1
$0128	$3001			MOVLW	1
$0129	$00F1			MOVWF	STACK_1
$012A	$292C			GOTO	L_func_moveForwardStraight_0
$012B	$	L_func_moveForwardStraight_1:
$012B	$01F1			CLRF	STACK_1, 1
$012C	$	L_func_moveForwardStraight_0:
$012C	$0871			MOVF	STACK_1, 0
$012D	$3A01			XORLW	1
$012E	$1D03			BTFSS	STATUS, Z
$012F	$2935			GOTO	L_func_moveForwardStraight_2
;Bakukang.c,36 :: 		PORTB = moveForward;
$0130	$300A			MOVLW	10
$0131	$0086			MOVWF	PORTB
;Bakukang.c,37 :: 		rotary1 = 0x00;
$0132	$01A0			CLRF	_rotary1, 1
;Bakukang.c,38 :: 		rotary2 = 0x00;
$0133	$01A1			CLRF	_rotary2, 1
;Bakukang.c,39 :: 		}
$0134	$2954			GOTO	L_func_moveForwardStraight_3
$0135	$	L_func_moveForwardStraight_2:
;Bakukang.c,41 :: 		else if ((PORTD.F0 == 0x01 && PORTD.F1 == 0x01) == 1) {
$0135	$3001			MOVLW	1
$0136	$0508			ANDWF	PORTD, 0
$0137	$00F1			MOVWF	STACK_1
$0138	$0871			MOVF	STACK_1, 0
$0139	$3A01			XORLW	1
$013A	$1D03			BTFSS	STATUS, Z
$013B	$2947			GOTO	L_func_moveForwardStraight_5
$013C	$3000			MOVLW	0
$013D	$1888			BTFSC	PORTD, 1
$013E	$3001			MOVLW	1
$013F	$00F1			MOVWF	STACK_1
$0140	$0871			MOVF	STACK_1, 0
$0141	$3A01			XORLW	1
$0142	$1D03			BTFSS	STATUS, Z
$0143	$2947			GOTO	L_func_moveForwardStraight_5
$0144	$3001			MOVLW	1
$0145	$00F1			MOVWF	STACK_1
$0146	$2948			GOTO	L_func_moveForwardStraight_4
$0147	$	L_func_moveForwardStraight_5:
$0147	$01F1			CLRF	STACK_1, 1
$0148	$	L_func_moveForwardStraight_4:
$0148	$0871			MOVF	STACK_1, 0
$0149	$3A01			XORLW	1
$014A	$1D03			BTFSS	STATUS, Z
$014B	$2952			GOTO	L_func_moveForwardStraight_6
;Bakukang.c,42 :: 		PORTB = moveForward;
$014C	$300A			MOVLW	10
$014D	$0086			MOVWF	PORTB
;Bakukang.c,43 :: 		rotary1 = 0x00;
$014E	$01A0			CLRF	_rotary1, 1
;Bakukang.c,44 :: 		rotary2 = 0x01;
$014F	$3001			MOVLW	1
$0150	$00A1			MOVWF	_rotary2
;Bakukang.c,45 :: 		}
$0151	$2954			GOTO	L_func_moveForwardStraight_7
$0152	$	L_func_moveForwardStraight_6:
;Bakukang.c,48 :: 		rotary1 = 0x01;
$0152	$3001			MOVLW	1
$0153	$00A0			MOVWF	_rotary1
;Bakukang.c,49 :: 		}
$0154	$	L_func_moveForwardStraight_7:
$0154	$	L_func_moveForwardStraight_3:
;Bakukang.c,52 :: 		if (rotary1 == 0x01) {
$0154	$0820			MOVF	_rotary1, 0
$0155	$3A01			XORLW	1
$0156	$1D03			BTFSS	STATUS, Z
$0157	$2990			GOTO	L_func_moveForwardStraight_8
;Bakukang.c,53 :: 		if (rotary2 == 0x00) {
$0158	$0821			MOVF	_rotary2, 0
$0159	$3A00			XORLW	0
$015A	$1D03			BTFSS	STATUS, Z
$015B	$2971			GOTO	L_func_moveForwardStraight_9
;Bakukang.c,54 :: 		if (PORTD.F0 == 1) {                                                 //If nag-una ang motor1
$015C	$3001			MOVLW	1
$015D	$0508			ANDWF	PORTD, 0
$015E	$00F1			MOVWF	STACK_1
$015F	$0871			MOVF	STACK_1, 0
$0160	$3A01			XORLW	1
$0161	$1D03			BTFSS	STATUS, Z
$0162	$2966			GOTO	L_func_moveForwardStraight_10
;Bakukang.c,55 :: 		PORTB = moveM2Forward;
$0163	$3008			MOVLW	8
$0164	$0086			MOVWF	PORTB
;Bakukang.c,56 :: 		}
$0165	$2970			GOTO	L_func_moveForwardStraight_11
$0166	$	L_func_moveForwardStraight_10:
;Bakukang.c,58 :: 		else if (PORTD.F1 == 1) {                                            //If nag-una ang motor2
$0166	$3000			MOVLW	0
$0167	$1888			BTFSC	PORTD, 1
$0168	$3001			MOVLW	1
$0169	$00F1			MOVWF	STACK_1
$016A	$0871			MOVF	STACK_1, 0
$016B	$3A01			XORLW	1
$016C	$1D03			BTFSS	STATUS, Z
$016D	$2970			GOTO	L_func_moveForwardStraight_12
;Bakukang.c,59 :: 		PORTB = moveM1Forward;
$016E	$3002			MOVLW	2
$016F	$0086			MOVWF	PORTB
;Bakukang.c,60 :: 		}
$0170	$	L_func_moveForwardStraight_12:
$0170	$	L_func_moveForwardStraight_11:
;Bakukang.c,61 :: 		}
$0170	$298F			GOTO	L_func_moveForwardStraight_13
$0171	$	L_func_moveForwardStraight_9:
;Bakukang.c,63 :: 		else if (rotary2 == 0x01) {
$0171	$0821			MOVF	_rotary2, 0
$0172	$3A01			XORLW	1
$0173	$1D03			BTFSS	STATUS, Z
$0174	$298A			GOTO	L_func_moveForwardStraight_14
;Bakukang.c,64 :: 		if (PORTD.F0 == 0) {                                                 //If nag-una ang motor1
$0175	$3001			MOVLW	1
$0176	$0508			ANDWF	PORTD, 0
$0177	$00F1			MOVWF	STACK_1
$0178	$0871			MOVF	STACK_1, 0
$0179	$3A00			XORLW	0
$017A	$1D03			BTFSS	STATUS, Z
$017B	$297F			GOTO	L_func_moveForwardStraight_15
;Bakukang.c,65 :: 		PORTB = moveM2Forward;
$017C	$3008			MOVLW	8
$017D	$0086			MOVWF	PORTB
;Bakukang.c,66 :: 		}
$017E	$2989			GOTO	L_func_moveForwardStraight_16
$017F	$	L_func_moveForwardStraight_15:
;Bakukang.c,68 :: 		else if (PORTD.F1 == 0) {                                            //If nag-una ang motor2
$017F	$3000			MOVLW	0
$0180	$1888			BTFSC	PORTD, 1
$0181	$3001			MOVLW	1
$0182	$00F1			MOVWF	STACK_1
$0183	$0871			MOVF	STACK_1, 0
$0184	$3A00			XORLW	0
$0185	$1D03			BTFSS	STATUS, Z
$0186	$2989			GOTO	L_func_moveForwardStraight_17
;Bakukang.c,69 :: 		PORTB = moveM1Forward;
$0187	$3002			MOVLW	2
$0188	$0086			MOVWF	PORTB
;Bakukang.c,70 :: 		}
$0189	$	L_func_moveForwardStraight_17:
$0189	$	L_func_moveForwardStraight_16:
;Bakukang.c,71 :: 		}
$0189	$298F			GOTO	L_func_moveForwardStraight_18
$018A	$	L_func_moveForwardStraight_14:
;Bakukang.c,73 :: 		else if (rotary2 == 0x03) {
$018A	$0821			MOVF	_rotary2, 0
$018B	$3A03			XORLW	3
$018C	$1D03			BTFSS	STATUS, Z
$018D	$298F			GOTO	L_func_moveForwardStraight_19
;Bakukang.c,74 :: 		PORTC.F1 = 0x01;
$018E	$1487			BSF	PORTC, 1
;Bakukang.c,75 :: 		}
$018F	$	L_func_moveForwardStraight_19:
$018F	$	L_func_moveForwardStraight_18:
$018F	$	L_func_moveForwardStraight_13:
;Bakukang.c,76 :: 		}
$018F	$2990			GOTO	L_func_moveForwardStraight_20
$0190	$	L_func_moveForwardStraight_8:
;Bakukang.c,78 :: 		else {}
$0190	$	L_func_moveForwardStraight_20:
;Bakukang.c,79 :: 		}
$0190	$0008			RETURN
$021C	$	_func_Roaming:
;Bakukang.c,86 :: 		void func_Roaming() {
;Bakukang.c,88 :: 		func_moveForwardStraight();
$021C	$2117			CALL	_func_moveForwardStraight
;Bakukang.c,91 :: 		if (PORTD.F2 == 1) {
$021D	$3000			MOVLW	0
$021E	$1908			BTFSC	PORTD, 2
$021F	$3001			MOVLW	1
$0220	$00F1			MOVWF	STACK_1
$0221	$0871			MOVF	STACK_1, 0
$0222	$3A01			XORLW	1
$0223	$1D03			BTFSS	STATUS, Z
$0224	$2A46			GOTO	L_func_Roaming_21
;Bakukang.c,92 :: 		PORTB = stop;
$0225	$0186			CLRF	PORTB, 1
;Bakukang.c,93 :: 		nextStep = 0x01;
$0226	$3001			MOVLW	1
$0227	$00A2			MOVWF	_nextStep
;Bakukang.c,94 :: 		Delay_ms(1000);
$0228	$3006			MOVLW	6
$0229	$00FC			MOVWF	STACK_12
$022A	$30FF			MOVLW	255
$022B	$00FB			MOVWF	STACK_11
$022C	$30FF			MOVLW	255
$022D	$00FA			MOVWF	STACK_10
$022E	$0BFC			DECFSZ	STACK_12, F
$022F	$2A31			GOTO	$+2
$0230	$2A38			GOTO	$+8
$0231	$0BFB			DECFSZ	STACK_11, F
$0232	$2A34			GOTO	$+2
$0233	$2A37			GOTO	$+4
$0234	$0BFA			DECFSZ	STACK_10, F
$0235	$2A34			GOTO	$-1
$0236	$2A31			GOTO	$-5
$0237	$2A2E			GOTO	$-9
$0238	$301A			MOVLW	26
$0239	$00FB			MOVWF	STACK_11
$023A	$30FF			MOVLW	255
$023B	$00FA			MOVWF	STACK_10
$023C	$0BFB			DECFSZ	STACK_11, F
$023D	$2A3F			GOTO	$+2
$023E	$2A42			GOTO	$+4
$023F	$0BFA			DECFSZ	STACK_10, F
$0240	$2A3F			GOTO	$-1
$0241	$2A3C			GOTO	$-5
$0242	$3042			MOVLW	66
$0243	$00FA			MOVWF	STACK_10
$0244	$0BFA			DECFSZ	STACK_10, F
$0245	$2A44			GOTO	$-1
;Bakukang.c,95 :: 		}
$0246	$	L_func_Roaming_21:
;Bakukang.c,96 :: 		}
$0246	$0008			RETURN
$01E2	$	_func_getBox:
;Bakukang.c,99 :: 		void func_getBox() {
;Bakukang.c,102 :: 		for (i = 0; i < 39; i++) {
$01E2	$1303			BCF	STATUS, RP1
$01E3	$1283			BCF	STATUS, RP0
$01E4	$01A4			CLRF	func_getBox_i_L0
$01E5	$01A5			CLRF	func_getBox_i_L0+1
$01E6	$	L_func_getBox_22:
$01E6	$3080			MOVLW	128
$01E7	$0625			XORWF	func_getBox_i_L0+1, 0
$01E8	$00F0			MOVWF	STACK_0
$01E9	$3080			MOVLW	128
$01EA	$0270			SUBWF	STACK_0, 0
$01EB	$1D03			BTFSS	STATUS, Z
$01EC	$29EF			GOTO	L_func_getBox_41
$01ED	$3027			MOVLW	39
$01EE	$0224			SUBWF	func_getBox_i_L0, 0
$01EF	$	L_func_getBox_41:
$01EF	$1803			BTFSC	STATUS, C
$01F0	$2A05			GOTO	L_func_getBox_23
;Bakukang.c,103 :: 		func_moveForwardStraight();
$01F1	$2117			CALL	_func_moveForwardStraight
;Bakukang.c,104 :: 		Delay_ms(50);
$01F2	$3041			MOVLW	65
$01F3	$00FB			MOVWF	STACK_11
$01F4	$30FF			MOVLW	255
$01F5	$00FA			MOVWF	STACK_10
$01F6	$0BFB			DECFSZ	STACK_11, F
$01F7	$29F9			GOTO	$+2
$01F8	$29FC			GOTO	$+4
$01F9	$0BFA			DECFSZ	STACK_10, F
$01FA	$29F9			GOTO	$-1
$01FB	$29F6			GOTO	$-5
$01FC	$30C3			MOVLW	195
$01FD	$00FA			MOVWF	STACK_10
$01FE	$0BFA			DECFSZ	STACK_10, F
$01FF	$29FE			GOTO	$-1
$0200	$0000			NOP
;Bakukang.c,105 :: 		}
$0201	$	L_func_getBox_24:
;Bakukang.c,102 :: 		for (i = 0; i < 39; i++) {
$0201	$0AA4			INCF	func_getBox_i_L0, 1
$0202	$1903			BTFSC	STATUS, Z
$0203	$0AA5			INCF	func_getBox_i_L0+1, 1
;Bakukang.c,105 :: 		}
$0204	$29E6			GOTO	L_func_getBox_22
$0205	$	L_func_getBox_23:
;Bakukang.c,107 :: 		PORTB = moveBackward;
$0205	$3005			MOVLW	5
$0206	$0086			MOVWF	PORTB
;Bakukang.c,108 :: 		Delay_ms(75);
$0207	$3062			MOVLW	98
$0208	$00FB			MOVWF	STACK_11
$0209	$30FF			MOVLW	255
$020A	$00FA			MOVWF	STACK_10
$020B	$0BFB			DECFSZ	STACK_11, F
$020C	$2A0E			GOTO	$+2
$020D	$2A11			GOTO	$+4
$020E	$0BFA			DECFSZ	STACK_10, F
$020F	$2A0E			GOTO	$-1
$0210	$2A0B			GOTO	$-5
$0211	$3024			MOVLW	36
$0212	$00FA			MOVWF	STACK_10
$0213	$0BFA			DECFSZ	STACK_10, F
$0214	$2A13			GOTO	$-1
$0215	$0000			NOP
$0216	$0000			NOP
;Bakukang.c,109 :: 		PORTB = closeArm;
$0217	$3010			MOVLW	16
$0218	$0086			MOVWF	PORTB
;Bakukang.c,111 :: 		nextStep = 0x02;
$0219	$3002			MOVLW	2
$021A	$00A2			MOVWF	_nextStep
;Bakukang.c,112 :: 		}
$021B	$0008			RETURN
$026C	$	_func_detectColor:
;Bakukang.c,115 :: 		void func_detectColor() {
;Bakukang.c,116 :: 		if (PORTD.F3 == 0) {
$026C	$3000			MOVLW	0
$026D	$1303			BCF	STATUS, RP1
$026E	$1283			BCF	STATUS, RP0
$026F	$1988			BTFSC	PORTD, 3
$0270	$3001			MOVLW	1
$0271	$00F1			MOVWF	STACK_1
$0272	$0871			MOVF	STACK_1, 0
$0273	$3A00			XORLW	0
$0274	$1D03			BTFSS	STATUS, Z
$0275	$2A79			GOTO	L_func_detectColor_25
;Bakukang.c,117 :: 		PORTC.F2 = 0x01;
$0276	$1507			BSF	PORTC, 2
;Bakukang.c,118 :: 		colorDetected = 0x00;                                                   //ZERO IF BOX IS BLUE
$0277	$01A3			CLRF	_colorDetected, 1
;Bakukang.c,119 :: 		}
$0278	$2A84			GOTO	L_func_detectColor_26
$0279	$	L_func_detectColor_25:
;Bakukang.c,121 :: 		else if (PORTD.F3 == 1) {                                                  //ONE IF BOX IS RED
$0279	$3000			MOVLW	0
$027A	$1988			BTFSC	PORTD, 3
$027B	$3001			MOVLW	1
$027C	$00F1			MOVWF	STACK_1
$027D	$0871			MOVF	STACK_1, 0
$027E	$3A01			XORLW	1
$027F	$1D03			BTFSS	STATUS, Z
$0280	$2A84			GOTO	L_func_detectColor_27
;Bakukang.c,122 :: 		PORTC.F3 = 0x01;
$0281	$1587			BSF	PORTC, 3
;Bakukang.c,123 :: 		colorDetected = 0x01;
$0282	$3001			MOVLW	1
$0283	$00A3			MOVWF	_colorDetected
;Bakukang.c,124 :: 		}
$0284	$	L_func_detectColor_27:
$0284	$	L_func_detectColor_26:
;Bakukang.c,126 :: 		nextStep = 0x03;
$0284	$3003			MOVLW	3
$0285	$00A2			MOVWF	_nextStep
;Bakukang.c,127 :: 		}
$0286	$0008			RETURN
$0247	$	_func_goHome:
;Bakukang.c,130 :: 		void func_goHome() {
;Bakukang.c,132 :: 		PORTB = moveBackward;
$0247	$3005			MOVLW	5
$0248	$1303			BCF	STATUS, RP1
$0249	$1283			BCF	STATUS, RP0
$024A	$0086			MOVWF	PORTB
;Bakukang.c,133 :: 		Delay_ms(3000);
$024B	$3010			MOVLW	16
$024C	$00FC			MOVWF	STACK_12
$024D	$30FF			MOVLW	255
$024E	$00FB			MOVWF	STACK_11
$024F	$30FF			MOVLW	255
$0250	$00FA			MOVWF	STACK_10
$0251	$0BFC			DECFSZ	STACK_12, F
$0252	$2A54			GOTO	$+2
$0253	$2A5B			GOTO	$+8
$0254	$0BFB			DECFSZ	STACK_11, F
$0255	$2A57			GOTO	$+2
$0256	$2A5A			GOTO	$+4
$0257	$0BFA			DECFSZ	STACK_10, F
$0258	$2A57			GOTO	$-1
$0259	$2A54			GOTO	$-5
$025A	$2A51			GOTO	$-9
$025B	$304C			MOVLW	76
$025C	$00FB			MOVWF	STACK_11
$025D	$30FF			MOVLW	255
$025E	$00FA			MOVWF	STACK_10
$025F	$0BFB			DECFSZ	STACK_11, F
$0260	$2A62			GOTO	$+2
$0261	$2A65			GOTO	$+4
$0262	$0BFA			DECFSZ	STACK_10, F
$0263	$2A62			GOTO	$-1
$0264	$2A5F			GOTO	$-5
$0265	$30CE			MOVLW	206
$0266	$00FA			MOVWF	STACK_10
$0267	$0BFA			DECFSZ	STACK_10, F
$0268	$2A67			GOTO	$-1
;Bakukang.c,135 :: 		nextStep = 0x04;
$0269	$3004			MOVLW	4
$026A	$00A2			MOVWF	_nextStep
;Bakukang.c,136 :: 		}
$026B	$0008			RETURN
$0004	$	_func_sortBox:
;Bakukang.c,139 :: 		void func_sortBox() {
;Bakukang.c,140 :: 		if (colorDetected == 0) {
$0004	$1303			BCF	STATUS, RP1
$0005	$1283			BCF	STATUS, RP0
$0006	$0823			MOVF	_colorDetected, 0
$0007	$3A00			XORLW	0
$0008	$1D03			BTFSS	STATUS, Z
$0009	$288E			GOTO	L_func_sortBox_28
;Bakukang.c,141 :: 		PORTB = turnRight;
$000A	$3006			MOVLW	6
$000B	$0086			MOVWF	PORTB
;Bakukang.c,142 :: 		Delay_ms(1500);
$000C	$3008			MOVLW	8
$000D	$00FC			MOVWF	STACK_12
$000E	$30FF			MOVLW	255
$000F	$00FB			MOVWF	STACK_11
$0010	$30FF			MOVLW	255
$0011	$00FA			MOVWF	STACK_10
$0012	$0BFC			DECFSZ	STACK_12, F
$0013	$2815			GOTO	$+2
$0014	$281C			GOTO	$+8
$0015	$0BFB			DECFSZ	STACK_11, F
$0016	$2818			GOTO	$+2
$0017	$281B			GOTO	$+4
$0018	$0BFA			DECFSZ	STACK_10, F
$0019	$2818			GOTO	$-1
$001A	$2815			GOTO	$-5
$001B	$2812			GOTO	$-9
$001C	$30A5			MOVLW	165
$001D	$00FB			MOVWF	STACK_11
$001E	$30FF			MOVLW	255
$001F	$00FA			MOVWF	STACK_10
$0020	$0BFB			DECFSZ	STACK_11, F
$0021	$2823			GOTO	$+2
$0022	$2826			GOTO	$+4
$0023	$0BFA			DECFSZ	STACK_10, F
$0024	$2823			GOTO	$-1
$0025	$2820			GOTO	$-5
$0026	$30E7			MOVLW	231
$0027	$00FA			MOVWF	STACK_10
$0028	$0BFA			DECFSZ	STACK_10, F
$0029	$2828			GOTO	$-1
$002A	$0000			NOP
;Bakukang.c,143 :: 		PORTB = moveForward;
$002B	$300A			MOVLW	10
$002C	$0086			MOVWF	PORTB
;Bakukang.c,144 :: 		Delay_ms(2000);
$002D	$300B			MOVLW	11
$002E	$00FC			MOVWF	STACK_12
$002F	$30FF			MOVLW	255
$0030	$00FB			MOVWF	STACK_11
$0031	$30FF			MOVLW	255
$0032	$00FA			MOVWF	STACK_10
$0033	$0BFC			DECFSZ	STACK_12, F
$0034	$2836			GOTO	$+2
$0035	$283D			GOTO	$+8
$0036	$0BFB			DECFSZ	STACK_11, F
$0037	$2839			GOTO	$+2
$0038	$283C			GOTO	$+4
$0039	$0BFA			DECFSZ	STACK_10, F
$003A	$2839			GOTO	$-1
$003B	$2836			GOTO	$-5
$003C	$2833			GOTO	$-9
$003D	$3033			MOVLW	51
$003E	$00FB			MOVWF	STACK_11
$003F	$30FF			MOVLW	255
$0040	$00FA			MOVWF	STACK_10
$0041	$0BFB			DECFSZ	STACK_11, F
$0042	$2844			GOTO	$+2
$0043	$2847			GOTO	$+4
$0044	$0BFA			DECFSZ	STACK_10, F
$0045	$2844			GOTO	$-1
$0046	$2841			GOTO	$-5
$0047	$3088			MOVLW	136
$0048	$00FA			MOVWF	STACK_10
$0049	$0BFA			DECFSZ	STACK_10, F
$004A	$2849			GOTO	$-1
;Bakukang.c,145 :: 		PORTB = moveBackward;
$004B	$3005			MOVLW	5
$004C	$0086			MOVWF	PORTB
;Bakukang.c,146 :: 		Delay_ms(2000);
$004D	$300B			MOVLW	11
$004E	$00FC			MOVWF	STACK_12
$004F	$30FF			MOVLW	255
$0050	$00FB			MOVWF	STACK_11
$0051	$30FF			MOVLW	255
$0052	$00FA			MOVWF	STACK_10
$0053	$0BFC			DECFSZ	STACK_12, F
$0054	$2856			GOTO	$+2
$0055	$285D			GOTO	$+8
$0056	$0BFB			DECFSZ	STACK_11, F
$0057	$2859			GOTO	$+2
$0058	$285C			GOTO	$+4
$0059	$0BFA			DECFSZ	STACK_10, F
$005A	$2859			GOTO	$-1
$005B	$2856			GOTO	$-5
$005C	$2853			GOTO	$-9
$005D	$3033			MOVLW	51
$005E	$00FB			MOVWF	STACK_11
$005F	$30FF			MOVLW	255
$0060	$00FA			MOVWF	STACK_10
$0061	$0BFB			DECFSZ	STACK_11, F
$0062	$2864			GOTO	$+2
$0063	$2867			GOTO	$+4
$0064	$0BFA			DECFSZ	STACK_10, F
$0065	$2864			GOTO	$-1
$0066	$2861			GOTO	$-5
$0067	$3088			MOVLW	136
$0068	$00FA			MOVWF	STACK_10
$0069	$0BFA			DECFSZ	STACK_10, F
$006A	$2869			GOTO	$-1
;Bakukang.c,147 :: 		PORTB = turnLeft;
$006B	$3009			MOVLW	9
$006C	$0086			MOVWF	PORTB
;Bakukang.c,148 :: 		Delay_ms(1500);
$006D	$3008			MOVLW	8
$006E	$00FC			MOVWF	STACK_12
$006F	$30FF			MOVLW	255
$0070	$00FB			MOVWF	STACK_11
$0071	$30FF			MOVLW	255
$0072	$00FA			MOVWF	STACK_10
$0073	$0BFC			DECFSZ	STACK_12, F
$0074	$2876			GOTO	$+2
$0075	$287D			GOTO	$+8
$0076	$0BFB			DECFSZ	STACK_11, F
$0077	$2879			GOTO	$+2
$0078	$287C			GOTO	$+4
$0079	$0BFA			DECFSZ	STACK_10, F
$007A	$2879			GOTO	$-1
$007B	$2876			GOTO	$-5
$007C	$2873			GOTO	$-9
$007D	$30A5			MOVLW	165
$007E	$00FB			MOVWF	STACK_11
$007F	$30FF			MOVLW	255
$0080	$00FA			MOVWF	STACK_10
$0081	$0BFB			DECFSZ	STACK_11, F
$0082	$2884			GOTO	$+2
$0083	$2887			GOTO	$+4
$0084	$0BFA			DECFSZ	STACK_10, F
$0085	$2884			GOTO	$-1
$0086	$2881			GOTO	$-5
$0087	$30E7			MOVLW	231
$0088	$00FA			MOVWF	STACK_10
$0089	$0BFA			DECFSZ	STACK_10, F
$008A	$2889			GOTO	$-1
$008B	$0000			NOP
;Bakukang.c,149 :: 		PORTB = stop;
$008C	$0186			CLRF	PORTB, 1
;Bakukang.c,150 :: 		}
$008D	$2915			GOTO	L_func_sortBox_29
$008E	$	L_func_sortBox_28:
;Bakukang.c,152 :: 		else if (colorDetected == 1) {
$008E	$0823			MOVF	_colorDetected, 0
$008F	$3A01			XORLW	1
$0090	$1D03			BTFSS	STATUS, Z
$0091	$2915			GOTO	L_func_sortBox_30
;Bakukang.c,153 :: 		PORTB = turnLeft;
$0092	$3009			MOVLW	9
$0093	$0086			MOVWF	PORTB
;Bakukang.c,154 :: 		Delay_ms(1500);
$0094	$3008			MOVLW	8
$0095	$00FC			MOVWF	STACK_12
$0096	$30FF			MOVLW	255
$0097	$00FB			MOVWF	STACK_11
$0098	$30FF			MOVLW	255
$0099	$00FA			MOVWF	STACK_10
$009A	$0BFC			DECFSZ	STACK_12, F
$009B	$289D			GOTO	$+2
$009C	$28A4			GOTO	$+8
$009D	$0BFB			DECFSZ	STACK_11, F
$009E	$28A0			GOTO	$+2
$009F	$28A3			GOTO	$+4
$00A0	$0BFA			DECFSZ	STACK_10, F
$00A1	$28A0			GOTO	$-1
$00A2	$289D			GOTO	$-5
$00A3	$289A			GOTO	$-9
$00A4	$30A5			MOVLW	165
$00A5	$00FB			MOVWF	STACK_11
$00A6	$30FF			MOVLW	255
$00A7	$00FA			MOVWF	STACK_10
$00A8	$0BFB			DECFSZ	STACK_11, F
$00A9	$28AB			GOTO	$+2
$00AA	$28AE			GOTO	$+4
$00AB	$0BFA			DECFSZ	STACK_10, F
$00AC	$28AB			GOTO	$-1
$00AD	$28A8			GOTO	$-5
$00AE	$30E7			MOVLW	231
$00AF	$00FA			MOVWF	STACK_10
$00B0	$0BFA			DECFSZ	STACK_10, F
$00B1	$28B0			GOTO	$-1
$00B2	$0000			NOP
;Bakukang.c,155 :: 		PORTB = moveForward;
$00B3	$300A			MOVLW	10
$00B4	$0086			MOVWF	PORTB
;Bakukang.c,156 :: 		Delay_ms(2000);
$00B5	$300B			MOVLW	11
$00B6	$00FC			MOVWF	STACK_12
$00B7	$30FF			MOVLW	255
$00B8	$00FB			MOVWF	STACK_11
$00B9	$30FF			MOVLW	255
$00BA	$00FA			MOVWF	STACK_10
$00BB	$0BFC			DECFSZ	STACK_12, F
$00BC	$28BE			GOTO	$+2
$00BD	$28C5			GOTO	$+8
$00BE	$0BFB			DECFSZ	STACK_11, F
$00BF	$28C1			GOTO	$+2
$00C0	$28C4			GOTO	$+4
$00C1	$0BFA			DECFSZ	STACK_10, F
$00C2	$28C1			GOTO	$-1
$00C3	$28BE			GOTO	$-5
$00C4	$28BB			GOTO	$-9
$00C5	$3033			MOVLW	51
$00C6	$00FB			MOVWF	STACK_11
$00C7	$30FF			MOVLW	255
$00C8	$00FA			MOVWF	STACK_10
$00C9	$0BFB			DECFSZ	STACK_11, F
$00CA	$28CC			GOTO	$+2
$00CB	$28CF			GOTO	$+4
$00CC	$0BFA			DECFSZ	STACK_10, F
$00CD	$28CC			GOTO	$-1
$00CE	$28C9			GOTO	$-5
$00CF	$3088			MOVLW	136
$00D0	$00FA			MOVWF	STACK_10
$00D1	$0BFA			DECFSZ	STACK_10, F
$00D2	$28D1			GOTO	$-1
;Bakukang.c,157 :: 		PORTB = moveBackward;
$00D3	$3005			MOVLW	5
$00D4	$0086			MOVWF	PORTB
;Bakukang.c,158 :: 		Delay_ms(2000);
$00D5	$300B			MOVLW	11
$00D6	$00FC			MOVWF	STACK_12
$00D7	$30FF			MOVLW	255
$00D8	$00FB			MOVWF	STACK_11
$00D9	$30FF			MOVLW	255
$00DA	$00FA			MOVWF	STACK_10
$00DB	$0BFC			DECFSZ	STACK_12, F
$00DC	$28DE			GOTO	$+2
$00DD	$28E5			GOTO	$+8
$00DE	$0BFB			DECFSZ	STACK_11, F
$00DF	$28E1			GOTO	$+2
$00E0	$28E4			GOTO	$+4
$00E1	$0BFA			DECFSZ	STACK_10, F
$00E2	$28E1			GOTO	$-1
$00E3	$28DE			GOTO	$-5
$00E4	$28DB			GOTO	$-9
$00E5	$3033			MOVLW	51
$00E6	$00FB			MOVWF	STACK_11
$00E7	$30FF			MOVLW	255
$00E8	$00FA			MOVWF	STACK_10
$00E9	$0BFB			DECFSZ	STACK_11, F
$00EA	$28EC			GOTO	$+2
$00EB	$28EF			GOTO	$+4
$00EC	$0BFA			DECFSZ	STACK_10, F
$00ED	$28EC			GOTO	$-1
$00EE	$28E9			GOTO	$-5
$00EF	$3088			MOVLW	136
$00F0	$00FA			MOVWF	STACK_10
$00F1	$0BFA			DECFSZ	STACK_10, F
$00F2	$28F1			GOTO	$-1
;Bakukang.c,159 :: 		PORTB = turnRight;
$00F3	$3006			MOVLW	6
$00F4	$0086			MOVWF	PORTB
;Bakukang.c,160 :: 		Delay_ms(1500);
$00F5	$3008			MOVLW	8
$00F6	$00FC			MOVWF	STACK_12
$00F7	$30FF			MOVLW	255
$00F8	$00FB			MOVWF	STACK_11
$00F9	$30FF			MOVLW	255
$00FA	$00FA			MOVWF	STACK_10
$00FB	$0BFC			DECFSZ	STACK_12, F
$00FC	$28FE			GOTO	$+2
$00FD	$2905			GOTO	$+8
$00FE	$0BFB			DECFSZ	STACK_11, F
$00FF	$2901			GOTO	$+2
$0100	$2904			GOTO	$+4
$0101	$0BFA			DECFSZ	STACK_10, F
$0102	$2901			GOTO	$-1
$0103	$28FE			GOTO	$-5
$0104	$28FB			GOTO	$-9
$0105	$30A5			MOVLW	165
$0106	$00FB			MOVWF	STACK_11
$0107	$30FF			MOVLW	255
$0108	$00FA			MOVWF	STACK_10
$0109	$0BFB			DECFSZ	STACK_11, F
$010A	$290C			GOTO	$+2
$010B	$290F			GOTO	$+4
$010C	$0BFA			DECFSZ	STACK_10, F
$010D	$290C			GOTO	$-1
$010E	$2909			GOTO	$-5
$010F	$30E7			MOVLW	231
$0110	$00FA			MOVWF	STACK_10
$0111	$0BFA			DECFSZ	STACK_10, F
$0112	$2911			GOTO	$-1
$0113	$0000			NOP
;Bakukang.c,161 :: 		PORTB = stop;
$0114	$0186			CLRF	PORTB, 1
;Bakukang.c,162 :: 		}
$0115	$	L_func_sortBox_30:
$0115	$	L_func_sortBox_29:
;Bakukang.c,164 :: 		nextStep = 0x00;
$0115	$01A2			CLRF	_nextStep, 1
;Bakukang.c,165 :: 		}
$0116	$0008			RETURN
$0287	$	GlobalIniBakukang:
$0287	$3003			MOVLW	3
$0288	$1303			BCF	STATUS, RP1
$0289	$1283			BCF	STATUS, RP0
$028A	$00A1			MOVWF	_rotary2+0
$028B	$0008			RETURN
$0191	$	_main:
;Bakukang.c,167 :: 		void main() {
;Bakukang.c,168 :: 		ADCON1 = 0x06;
$0191	$2287			CALL	GlobalIniBakukang
$0192	$3006			MOVLW	6
$0193	$1683			BSF	STATUS, RP0
$0194	$009F			MOVWF	ADCON1
;Bakukang.c,169 :: 		CMCON = 0x07;
$0195	$3007			MOVLW	7
$0196	$009C			MOVWF	CMCON
;Bakukang.c,171 :: 		TRISB = 0x00;                                                              //PORTB ALL OUTPUT
$0197	$0186			CLRF	TRISB, 1
;Bakukang.c,172 :: 		TRISC = 0x00;
$0198	$0187			CLRF	TRISC, 1
;Bakukang.c,173 :: 		TRISD = 0xFF;                                                              //PORTD ALL INPUT
$0199	$30FF			MOVLW	255
$019A	$0088			MOVWF	TRISD
;Bakukang.c,175 :: 		PORTB = openArm;
$019B	$3020			MOVLW	32
$019C	$1283			BCF	STATUS, RP0
$019D	$0086			MOVWF	PORTB
;Bakukang.c,176 :: 		PORTC = 0x00;
$019E	$0187			CLRF	PORTC, 1
;Bakukang.c,177 :: 		PORTD = 0x00;
$019F	$0188			CLRF	PORTD, 1
;Bakukang.c,179 :: 		Delay_ms(1000);
$01A0	$3006			MOVLW	6
$01A1	$00FC			MOVWF	STACK_12
$01A2	$30FF			MOVLW	255
$01A3	$00FB			MOVWF	STACK_11
$01A4	$30FF			MOVLW	255
$01A5	$00FA			MOVWF	STACK_10
$01A6	$0BFC			DECFSZ	STACK_12, F
$01A7	$29A9			GOTO	$+2
$01A8	$29B0			GOTO	$+8
$01A9	$0BFB			DECFSZ	STACK_11, F
$01AA	$29AC			GOTO	$+2
$01AB	$29AF			GOTO	$+4
$01AC	$0BFA			DECFSZ	STACK_10, F
$01AD	$29AC			GOTO	$-1
$01AE	$29A9			GOTO	$-5
$01AF	$29A6			GOTO	$-9
$01B0	$301A			MOVLW	26
$01B1	$00FB			MOVWF	STACK_11
$01B2	$30FF			MOVLW	255
$01B3	$00FA			MOVWF	STACK_10
$01B4	$0BFB			DECFSZ	STACK_11, F
$01B5	$29B7			GOTO	$+2
$01B6	$29BA			GOTO	$+4
$01B7	$0BFA			DECFSZ	STACK_10, F
$01B8	$29B7			GOTO	$-1
$01B9	$29B4			GOTO	$-5
$01BA	$3042			MOVLW	66
$01BB	$00FA			MOVWF	STACK_10
$01BC	$0BFA			DECFSZ	STACK_10, F
$01BD	$29BC			GOTO	$-1
;Bakukang.c,181 :: 		while(1) {
$01BE	$	L_main_31:
;Bakukang.c,182 :: 		switch(nextStep) {
$01BE	$29CB			GOTO	L_main_33
;Bakukang.c,183 :: 		case 0x00: func_Roaming(); break;
$01BF	$	L_main_35:
$01BF	$221C			CALL	_func_Roaming
$01C0	$29E0			GOTO	L_main_34
;Bakukang.c,184 :: 		case 0x01: func_getBox(); break;
$01C1	$	L_main_36:
$01C1	$21E2			CALL	_func_getBox
$01C2	$29E0			GOTO	L_main_34
;Bakukang.c,185 :: 		case 0x02: func_detectColor(); break;
$01C3	$	L_main_37:
$01C3	$226C			CALL	_func_detectColor
$01C4	$29E0			GOTO	L_main_34
;Bakukang.c,186 :: 		case 0x03: func_goHome(); break;
$01C5	$	L_main_38:
$01C5	$2247			CALL	_func_goHome
$01C6	$29E0			GOTO	L_main_34
;Bakukang.c,187 :: 		case 0x04: func_sortBox(); break;
$01C7	$	L_main_39:
$01C7	$2004			CALL	_func_sortBox
$01C8	$29E0			GOTO	L_main_34
;Bakukang.c,188 :: 		default:   PORTC.F0 = 0x01; break;
$01C9	$	L_main_40:
$01C9	$1407			BSF	PORTC, 0
$01CA	$29E0			GOTO	L_main_34
;Bakukang.c,189 :: 		}
$01CB	$	L_main_33:
$01CB	$0822			MOVF	_nextStep, 0
$01CC	$3A00			XORLW	0
$01CD	$1903			BTFSC	STATUS, Z
$01CE	$29BF			GOTO	L_main_35
$01CF	$0822			MOVF	_nextStep, 0
$01D0	$3A01			XORLW	1
$01D1	$1903			BTFSC	STATUS, Z
$01D2	$29C1			GOTO	L_main_36
$01D3	$0822			MOVF	_nextStep, 0
$01D4	$3A02			XORLW	2
$01D5	$1903			BTFSC	STATUS, Z
$01D6	$29C3			GOTO	L_main_37
$01D7	$0822			MOVF	_nextStep, 0
$01D8	$3A03			XORLW	3
$01D9	$1903			BTFSC	STATUS, Z
$01DA	$29C5			GOTO	L_main_38
$01DB	$0822			MOVF	_nextStep, 0
$01DC	$3A04			XORLW	4
$01DD	$1903			BTFSC	STATUS, Z
$01DE	$29C7			GOTO	L_main_39
$01DF	$29C9			GOTO	L_main_40
$01E0	$	L_main_34:
;Bakukang.c,191 :: 		}
$01E0	$29BE			GOTO	L_main_31
;Bakukang.c,193 :: 		}
$01E1	$29E1			GOTO	$
